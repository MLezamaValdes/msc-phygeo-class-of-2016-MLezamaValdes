source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
library(hydroGOF)
library(hydroGOF)
cp <- readRDS(paste0(path_da_rds,"feldfr_clean.rds"))
row.has.na <- apply(cp[,c(7,9)], 1, function(n){any(is.na(n))})
sum(row.has.na)
nrow(cp)-sum(row.has.na)
x <- cp[!row.has.na,]
lmt82 <- lapply(seq(100), function(n){
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[sample(nrow(x), nrow(x)*0.2), ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
dflmt <- do.call("rbind", lmt82)
head(dflmt)
summary(dflmt[,1])
boxplot(dflmt[,1])
lmt82 <- lapply(seq(100), function(n){
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[-testdata, ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
lmt82 <- lapply(seq(100), function(n){
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[!testdata, ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
lmt82 <- lapply(seq(100), function(n){
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[!testdata, ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
dflmt <- do.call("rbind", lmt82)
lmt82 <- lapply(seq(100), function(n){
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[-testdata, ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
dflmt <- do.call("rbind", lmt82)
lmt82 <- lapply(seq(100), function(n){
set.seed(i)
s1 <-sample(nrow(x), 0.8*nrow(x))
train <- x[s1,]
test <- x[-s1,]
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[-sample(nrow(x), nrow(x)*0.8), ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
lmt82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
train <- x[s1,]
test <- x[-s1,]
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[-sample(nrow(x), nrow(x)*0.8), ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
dflmt <- do.call("rbind", lmt82)
---
title: "da-ws-06-2"
author: "Jannis Gottwald, Lukas Ditzel, Michaela Vorndran, Maite Lezama Valdes, Alexander Jorns"
date: "27 November 2016"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T)
```
## W06-2: Wheat vs. barley revisited
####task:
assess prediction performance winter barley yield based on yield numbers
winter wheat by biv lin model. cross-validation: mean of the root mean
square error, its minimum, 25% 50% and 75% quantile and maximum value across
the cross-validation runs.
```{r}
#da-ws-06-2
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#root mean sqare error implemented in function rmse() in this package:
#install.packages("hydroGOF")
library(hydroGOF)
cp <- readRDS(paste0(path_da_rds,"feldfr_clean.rds"))
#vector logical: na-values in rows?
row.has.na <- apply(cp[,c(7,9)], 1, function(n){any(is.na(n))})
sum(row.has.na)
#test how many cases remain
nrow(cp)-sum(row.has.na)
x <- cp[!row.has.na,]
lmt82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
train <- x[s1,]
test <- x[-s1,]
testdata <- x[sample(nrow(x), nrow(x)*0.8), ]
traindata <- x[-sample(nrow(x), nrow(x)*0.8), ]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
dflmt <- do.call("rbind", lmt82)
#rownames(dflmt) <- c(1:100)
head(dflmt)
summary(dflmt[,1])
boxplot(dflmt[,1])
```
####Prediction performance: The root mean sqare error (the error being the deviation
####between observed and predicted values) ranges in any repetition of the 100 random
####samples between 7.3 and 7.8 and is more or less normal distributed.
```{r}
#assess distribution of dependent variable prediction
summary(dflmt$pred)
range(dflmt$pred)
mean(dflmt$pred)
sd(dflmt$pred)
#assess distribution of dependent variable observation
summary(dflmt$obsv)
range(dflmt$obsv)
mean(dflmt$obsv)
sd(dflmt$obsv)
boxplot(dflmt$pred, dflmt$obsv, names=c("predicted", "observed"))
```
####The range of observed values in the dependent variable is 0 to 113.3, and 14.67
####to 119.6 in the predicted case, its mean being 71.95 with a SD of 12.69 in case
####of predicted values respectively 71..95 and 10.2. So the maximum error to be
####expected seems to be acceptable.
####Although interquartil range in predicted values is smaller than in the actual
####distribution, as can be seen in the boxplots, observed and predicted distributions
####of winter wheat can be predicted nicely with help of winter barley.
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#da-ws-06-2
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#root mean sqare error implemented in function rmse() in this package:
#install.packages("hydroGOF")
library(hydroGOF)
cp <- readRDS(paste0(path_da_rds,"feldfr_clean.rds"))
#vector logical: na-values in rows?
row.has.na <- apply(cp[,c(7,9)], 1, function(n){any(is.na(n))})
sum(row.has.na)
#test how many cases remain
nrow(cp)-sum(row.has.na)
x <- cp[!row.has.na,]
lmt82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
model_r_squared <- summary(mod)$r.squared
dflmt = data.frame(modrmse=modrmse, r_sq = model_r_squared,
pred=pred, obsv=obsv)
dflmt
})
dflmt <- do.call("rbind", lmt82)
#rownames(dflmt) <- c(1:100)
head(dflmt)
summary(dflmt[,1])
boxplot(dflmt[,1])
```
####Prediction performance: The root mean sqare error (the error being the deviation
####between observed and predicted values) ranges in any repetition of the 100 random
####samples between about 7.3 and 8 (depending on the sample selection) and is more or less normal distributed.
```{r}
#assess distribution of dependent variable prediction
summary(dflmt$pred)
mean(dflmt$pred)
sd(dflmt$pred)
#assess distribution of dependent variable observation
summary(dflmt$obsv)
mean(dflmt$obsv)
sd(dflmt$obsv)
boxplot(dflmt$pred, dflmt$obsv, names=c("predicted", "observed"))
```
####The range of observed values in the dependent variable in this case is from 0 to 113.3, and 14.67
####to 119.6 in this case of selection, its mean being 71.95 with a SD of 12.69 in case
####of predicted values respectively 71.95 and 10.2. So the maximum error to be
####expected seems to be acceptable.
####Although interquartil range in predicted values is smaller than in the actual
####distribution, as can be seen in the boxplots, observed and predicted distributions
####of winter wheat can be predicted nicely with help of winter barley.
xtrain <- sample(0,8*nrow(cp))
xtrain <- sample(nrow(cp),0,8*nrow(cp))
xtest <- data[-xtrain,]
xtest <- cp[-xtrain,]
trainsub <- sample(nrow(cp),0,8*nrow(cp))
train <- cp[trainsub,]
test <- cp[-train,]
trainsub <- sample(nrow(cp),0,8*nrow(cp))
train <- cp[trainsub,]
test <- cp[-train,]
test <- cp[!train,]
test <- cp[-trainsub,]
trainsub <- sample(nrow(cp),0,8*nrow(cp))
train <- cp[trainsub,]
test <- cp[-trainsub,]
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
cp <- readRDS(paste0(path_da_rds,"feldfr_clean.rds"))
row.has.na <- apply(cp[,c(7,9)], 1, function(n){any(is.na(n))})
sum(row.has.na)
nrow(cp)-sum(row.has.na)
x <- cp[!row.has.na,]
lmt82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
modrmse2 <- sqrt(mean(obs-pred)**2)
})
lmt82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- rmse(pred,obsv)
modrmse2 <- sqrt(mean(obsv-pred)**2)
})
summary(unlist(modrmse))
summary(unlist(lmt82))
lmt82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse2 <- sqrt(mean(obsv-pred)**2)
modrmse <- rmse(pred,obsv)
})
summary(unlist(lmt82))
sqrt(mean(obsv-pred)**2)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse2 <- sqrt(mean(obsv-pred)**2)
modrmse <- rmse(pred,obsv)
modrmse2 <- sqrt(mean((obsv-pred)**2))
lm82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- sqrt(mean((obsv-pred)**2))
})
summary(unlist(lm82))
boxplot(unlist(lm82))
```
cp <- readRDS(paste0(path_da_rds,"feldfr_clean.rds"))
cp
view(cp)
View(cp)
row.has.na <- apply(cp[,c(7,9)], 1, function(n){any(is.na(n))})
row.has.na
sum(row.has.na)
nrow(cp)
nrow(cp)-sum(row.has.na)
sample(nrow(x), 0.8*nrow(x))
?sample
nrow(x)
0.8*nrow(x)
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
testdata <- x[!s1,]
?lapply
?lm
?lm
?lm()
obsv <- testdata$Winter_wheat
s1 <-sample(nrow(x), 0.8*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
obsv
View(x)
View(x)
sum(x$Winter_wheat)
count(x$Winter_wheat)
nrow(x$Winter_wheat)
#leave-one-out-IMPLEMENTATION
lm82 <- lapply(seq(100), function(n){
set.seed(n)
traindata <- x[-n,]
testdata <- x[n,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- sqrt(mean((obsv-pred)**2))
})
summary(unlist(lm82))
boxplot(unlist(lm82))
#50-50-IMPLEMENTATION
lm82 <- lapply(seq(100), function(n){
set.seed(n)
s1 <-sample(nrow(x), 0.5*nrow(x))
traindata <- x[s1,]
testdata <- x[-s1,]
mod <- lm(Winter_wheat~Winter_barley, data=traindata)
pred <- predict(mod, newdata = testdata)
obsv <- testdata$Winter_wheat
modrmse <- sqrt(mean((obsv-pred)**2))
})
summary(unlist(lm82))
boxplot(unlist(lm82))
