return(results)
})
fwd_fs <- do.call("rbind", fwd_fs)
if(!is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(selected_vars, collapse=" + "))
lmod <- lm(formula, data = data)
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
} else {
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = 0,
AIC = 1E10)
}
# best_var <- as.character(fwd_fs$Variable[which(fwd_fs$AIC == min(fwd_fs$AIC))])
# min_AIC <- min(fwd_fs$AIC)
# fwd_fs <- rbind(results_selected, fwd_fs)
# return(list(best_var, min_AIC, fwd_fs))
best_var <- as.character(fwd_fs$Variable[which(fwd_fs$Adj_R_sqrd == max(fwd_fs$Adj_R_sqrd))])
max_adj_r_sqrd <- max(fwd_fs$Adj_R_sqrd)
fwd_fs <- rbind(results_selected, fwd_fs)
return(list(best_var, max_adj_r_sqrd, fwd_fs))
}
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
selected_vars
test[[2]]
test[[3]][1,2])
test[[3]][1,2]
while (test[[2]] >= test[[3]][1,2]){
selected_vars <- c(selected_vars, test[[1]])
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==test[[1]]))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=next_vars, selected_vars = selected_vars)
print(test)}
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
while (test[[2]] >= test[[3]][1,2]){
selected_vars <- c(selected_vars, test[[1]])
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=next_vars, selected_vars = selected_vars)
print(test)}
names(cp)==selected_vars
selected_vars
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
while (test[[2]] >= test[[3]][1,2]){
selected_vars <- c(selected_vars, test[[1]])
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=next_vars, selected_vars = selected_vars)
print(test)}
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#Optimum des Fehlers bei Vorwärtsauswahl = Abbruchkriterium
path_cp <- paste0(path_da_rds,"feldfr_clean.rds")
cp <- readRDS(path_cp)
cp
# dm-ws-07-1
# MOC - Data Analysis (T. Nauss, C. Reudenbach)
# Multiple linear regression, forward feature selection
# Forward feature selection function -------------------------------------------
forward_feature_selection <- function(data, dep, vars, selected_vars = NULL){
fwd_fs <- lapply(seq(length(vars)), function(v){
if(is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(vars[v], collapse=" + "))
} else {
formula <- paste(dep, " ~ ", paste(c(selected_vars, vars[v]), collapse=" + "))
}
lmod <- lm(formula, data = data)
results <- data.frame(Variable = vars[v],
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
return(results)
})
fwd_fs <- do.call("rbind", fwd_fs)
if(!is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(selected_vars, collapse=" + "))
lmod <- lm(formula, data = data)
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
} else {
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = 0,
AIC = 1E10)
}
# best_var <- as.character(fwd_fs$Variable[which(fwd_fs$AIC == min(fwd_fs$AIC))])
# min_AIC <- min(fwd_fs$AIC)
# fwd_fs <- rbind(results_selected, fwd_fs)
# return(list(best_var, min_AIC, fwd_fs))
best_var <- as.character(fwd_fs$Variable[which(fwd_fs$Adj_R_sqrd == max(fwd_fs$Adj_R_sqrd))])
max_adj_r_sqrd <- max(fwd_fs$Adj_R_sqrd)
fwd_fs <- rbind(results_selected, fwd_fs)
return(list(best_var, max_adj_r_sqrd, fwd_fs))
}
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
while (test[[2]] >= test[[3]][1,2]){
selected_vars <- c(selected_vars, test[[1]])
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=next_vars, selected_vars = selected_vars)
print(test)}
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
selected_vars
selected_vars <- c(selected_vars, test[[1]])
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=next_vars, selected_vars = selected_vars)
selected_vars <- c(selected_vars, test[[1]])
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#Optimum des Fehlers bei Vorwärtsauswahl = Abbruchkriterium
path_cp <- paste0(path_da_rds,"feldfr_clean.rds")
cp <- readRDS(path_cp)
cp
# dm-ws-07-1
# MOC - Data Analysis (T. Nauss, C. Reudenbach)
# Multiple linear regression, forward feature selection
# Forward feature selection function -------------------------------------------
forward_feature_selection <- function(data, dep, vars, selected_vars = NULL){
fwd_fs <- lapply(seq(length(vars)), function(v){
if(is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(vars[v], collapse=" + "))
} else {
formula <- paste(dep, " ~ ", paste(c(selected_vars, vars[v]), collapse=" + "))
}
lmod <- lm(formula, data = data)
results <- data.frame(Variable = vars[v],
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
return(results)
})
fwd_fs <- do.call("rbind", fwd_fs)
if(!is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(selected_vars, collapse=" + "))
lmod <- lm(formula, data = data)
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
} else {
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = 0,
AIC = 1E10)
}
# best_var <- as.character(fwd_fs$Variable[which(fwd_fs$AIC == min(fwd_fs$AIC))])
# min_AIC <- min(fwd_fs$AIC)
# fwd_fs <- rbind(results_selected, fwd_fs)
# return(list(best_var, min_AIC, fwd_fs))
best_var <- as.character(fwd_fs$Variable[which(fwd_fs$Adj_R_sqrd == max(fwd_fs$Adj_R_sqrd))])
max_adj_r_sqrd <- max(fwd_fs$Adj_R_sqrd)
fwd_fs <- rbind(results_selected, fwd_fs)
return(list(best_var, max_adj_r_sqrd, fwd_fs))
}
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
selected_vars <- test[[1]]
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = next_vars)
test[[1]]
selected_vars <- c(selected_vars, test[[1]])
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
selected_vars
vars
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
vars
next_vars <- vars[-which(selected_vars))]
next_vars
next_vars <- vars[-which(selected_vars)]
next_vars <- vars-selected_vars
vars
next_vars <- vars[!selected_vars]
!selected_vars
vars[!selected_vars]
next_vars <- vars[selected_vars]
next_vars
vars
next_vars <- vars[-which(names(cp)==selected_vars)]
next_vars
selected_vars
vars[which(names(cp)==selected_vars)
]
vars[which(names(vars)==selected_vars)]
vars[which(!selected_vars)]
selected_vars
vars[which(!names(selected_vars)]
vars[which(!names(selected_vars))]
which(vars==selected_vars)
sdf <- which(vars==selected_vars)
sdf
sdf <- as.character(which(vars==selected_vars))
sdf
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
selected_vars
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#Optimum des Fehlers bei Vorwärtsauswahl = Abbruchkriterium
path_cp <- paste0(path_da_rds,"feldfr_clean.rds")
cp <- readRDS(path_cp)
cp
# dm-ws-07-1
# MOC - Data Analysis (T. Nauss, C. Reudenbach)
# Multiple linear regression, forward feature selection
# Forward feature selection function -------------------------------------------
forward_feature_selection <- function(data, dep, vars, selected_vars = NULL){
fwd_fs <- lapply(seq(length(vars)), function(v){
if(is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(vars[v], collapse=" + "))
} else {
formula <- paste(dep, " ~ ", paste(c(selected_vars, vars[v]), collapse=" + "))
}
lmod <- lm(formula, data = data)
results <- data.frame(Variable = vars[v],
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
return(results)
})
fwd_fs <- do.call("rbind", fwd_fs)
if(!is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(selected_vars, collapse=" + "))
lmod <- lm(formula, data = data)
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
} else {
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = 0,
AIC = 1E10)
}
# best_var <- as.character(fwd_fs$Variable[which(fwd_fs$AIC == min(fwd_fs$AIC))])
# min_AIC <- min(fwd_fs$AIC)
# fwd_fs <- rbind(results_selected, fwd_fs)
# return(list(best_var, min_AIC, fwd_fs))
best_var <- as.character(fwd_fs$Variable[which(fwd_fs$Adj_R_sqrd == max(fwd_fs$Adj_R_sqrd))])
max_adj_r_sqrd <- max(fwd_fs$Adj_R_sqrd)
fwd_fs <- rbind(results_selected, fwd_fs)
return(list(best_var, max_adj_r_sqrd, fwd_fs))
}
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))])
vars
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
vars
selected_vars <- test[[1]]
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
next_vars
test <- forward_feature_selection(data=cp, dep ="Winter_wheat", vars = next_vars)
selected_vars <- c(selected_vars, test[[1]])
selected_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
View(cp)
View(cp)
selected_vars
next_vars <- vars[-grep(selected_vars,vars)]
next_vars
selected_vars
vars
grep(selected_vars,vars)
?grep
next_vars <- c(vars[-grep(selected_vars,vars)])
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(cp)==selected_vars))]
next_vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"|names(cp)==selected_vars)
]
names(cp)==selected_vars)
names(cp)==selected_vars
selected_vars
names(cp)==selected_vars
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
vars
next_vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"),which(names(vars)==selected_vars))]
next_vars
selected_vars <- c(selected_vars, test[[1]])
selected_vars
names(vars)==selected_vars
names(cp)==selected_vars
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
selected_vars
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#Optimum des Fehlers bei Vorwärtsauswahl = Abbruchkriterium
path_cp <- paste0(path_da_rds,"feldfr_clean.rds")
cp <- readRDS(path_cp)
cp
# dm-ws-07-1
# MOC - Data Analysis (T. Nauss, C. Reudenbach)
# Multiple linear regression, forward feature selection
# Forward feature selection function -------------------------------------------
forward_feature_selection <- function(data, dep, vars, selected_vars = NULL){
fwd_fs <- lapply(seq(length(vars)), function(v){
if(is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(vars[v], collapse=" + "))
} else {
formula <- paste(dep, " ~ ", paste(c(selected_vars, vars[v]), collapse=" + "))
}
lmod <- lm(formula, data = data)
results <- data.frame(Variable = vars[v],
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
return(results)
})
fwd_fs <- do.call("rbind", fwd_fs)
if(!is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(selected_vars, collapse=" + "))
lmod <- lm(formula, data = data)
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
} else {
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = 0,
AIC = 1E10)
}
# best_var <- as.character(fwd_fs$Variable[which(fwd_fs$AIC == min(fwd_fs$AIC))])
# min_AIC <- min(fwd_fs$AIC)
# fwd_fs <- rbind(results_selected, fwd_fs)
# return(list(best_var, min_AIC, fwd_fs))
best_var <- as.character(fwd_fs$Variable[which(fwd_fs$Adj_R_sqrd == max(fwd_fs$Adj_R_sqrd))])
max_adj_r_sqrd <- max(fwd_fs$Adj_R_sqrd)
fwd_fs <- rbind(results_selected, fwd_fs)
return(list(best_var, max_adj_r_sqrd, fwd_fs))
}
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
vars
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
test <- list(1,1,2,3)
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(nrow(cp(1:6)), selected_vars = NULL)
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(nrow(cp(1:6)), selected_vars = NULL)
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))], selected_vars = NULL)
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))], selected_vars = NULL)
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
selected_vars <- NULL
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))], selected_vars = NULL)
selected_vars <- test[[1]]
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars, selected_vars = selected_vars)
print(test)}
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)
[-c(1:6, which(names(cp)=="Winter_wheat"))],
selected_vars = NULL)
selected_vars <- test[[1]]
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars,
selected_vars = selected_vars)
print(test)}
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)
[-c(1:6, which(names(cp)=="Winter_wheat"))],
selected_vars = NULL)
selected_vars <- 0
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars,
selected_vars = selected_vars)
print(test)}
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)
[-c(1:6, which(names(cp)=="Winter_wheat"))],
selected_vars = NULL)
selected_vars <- NULL
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars,
selected_vars = selected_vars)
print(test)}
test[[2]]
test[[3]][1,2]
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)
[-c(1:6, which(names(cp)=="Winter_wheat"))],
selected_vars = NULL)
selected_vars <- NULL
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars,
selected_vars = selected_vars)
print(test)}
source("C:/Users/mleza/Documents/msc-phygeo-ws-16/msc-phygeo-class-of-2016-MLezamaValdes/fun/paths.r")
#Optimum des Fehlers bei Vorwärtsauswahl = Abbruchkriterium
path_cp <- paste0(path_da_rds,"feldfr_clean.rds")
cp <- readRDS(path_cp)
forward_feature_selection <- function(data, dep, vars, selected_vars = NULL){
fwd_fs <- lapply(seq(length(vars)), function(v){
if(is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(vars[v], collapse=" + "))
} else {
formula <- paste(dep, " ~ ", paste(c(selected_vars, vars[v]), collapse=" + "))
}
lmod <- lm(formula, data = data)
results <- data.frame(Variable = vars[v],
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
return(results)
})
fwd_fs <- do.call("rbind", fwd_fs)
if(!is.null(selected_vars)){
formula <- paste(dep, " ~ ", paste(selected_vars, collapse=" + "))
lmod <- lm(formula, data = data)
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = round(summary(lmod)$adj.r.squared, 4),
AIC = round(AIC(lmod), 4))
} else {
results_selected <- data.frame(Variable = paste0("all: ",
paste(selected_vars,
collapse=", ")),
Adj_R_sqrd = 0,
AIC = 1E10)
}
# best_var <- as.character(fwd_fs$Variable[which(fwd_fs$AIC == min(fwd_fs$AIC))])
# min_AIC <- min(fwd_fs$AIC)
# fwd_fs <- rbind(results_selected, fwd_fs)
# return(list(best_var, min_AIC, fwd_fs))
best_var <- as.character(fwd_fs$Variable[which(fwd_fs$Adj_R_sqrd == max(fwd_fs$Adj_R_sqrd))])
max_adj_r_sqrd <- max(fwd_fs$Adj_R_sqrd)
fwd_fs <- rbind(results_selected, fwd_fs)
return(list(best_var, max_adj_r_sqrd, fwd_fs))
}
##eigenes Ding
vars <- names(cp)[-c(1:6, which(names(cp)=="Winter_wheat"))]
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=names(cp)
[-c(1:6, which(names(cp)=="Winter_wheat"))],
selected_vars = NULL)
selected_vars <- NULL
while (test[[2]] >= test[[3]][1,2]){
vars <- vars[-grep(test[[1]],vars)]
selected_vars <- c(selected_vars, test[[1]])
test <- forward_feature_selection(data=cp,dep="Winter_wheat",vars=vars,
selected_vars = selected_vars)}
test
